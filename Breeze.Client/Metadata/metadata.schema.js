var x = {
    "title": "Breeze Metadata Schema",
    "type": "object",
    "properties": {
        "structuralTypeMap": {
            "description": "Map of entity type/complex type names to their metadata definitions",
            "type": "object",
            "additionalProperties": {
                "type": "object",
                "oneOf": [
                    { "$ref": "#/definitions/entityType" },
                    { "$ref": "#/definitions/complexType" }
                ]
            }
        },
        "resourceEntityTypeMap": {
            "description": "Map of resource names to entity type names.",
            "type": "object",
            "additionalProperties": {
                "description": "Fully qualified Entity type names.",
                "type": "string",
            }
        },
    
        "serializationVersion": {
            "description": "The serialization version for this document",
            "type": "string"
        },
        "namingConvention": {
            "description": "On deserialization, this must match the name of some 'namingConvention' already registered on the breeze client.",
            "type": "string"
        },
        "localQueryComparisonOptions": {
            "description": "On deserialization, this must match the name of some 'localQueryComparisonOptions' already registered on the breeze client.",
            "type": "string"
        },
        "dataServices": {
            "type": "array",
            "items": { "$ref": "#/definitions/dataService" }
        }
        
    },
    "required": ["structuralTypeMap"],
    "definitions": {
        "entityType": {
            "properties": {
                "shortName": {
                    "type": "string",
                },
                "namespace": {
                    "type": "string",
                    "default": ""
                },
                "autoGeneratedKeyType": {
                    "enum": ["Identity", "None", "KeyGenerator"],
                    "default": "None"
                },
                "defaultResourceName": {
                    "type": "string"
                },
                "dataProperties": {
                    "type": "array",
                    "items": { "$ref": "#/definitions/dataProperty" },
                    "uniqueItems": true
                },
                "navigationProperties": {
                    "type": "array",
                    "items": { "$ref": "#/definitions/navigationProperty" },
                    "uniqueItems": true
                }
            },
            "required": ["shortName", "autoGeneratedKeyType", "dataProperties"]
        },
        "complexType": {
            "properties": {
                "shortName": {
                    "type": "string",
                },
                "namespace": {
                    "type": "string",
                    "default": ""
                },
                "dataProperties": {
                    "type": "array",
                    "items": { "$ref": "#/definitions/dataProperty" },
                    "uniqueItems": true
                }
            },
            "required": ["shortName", "dataProperties"]
        },
        "dataProperty": {
            "properties": {
                "name": {
                    "type": "number"
                },
                "nameOnServer": {
                    "type": "string"
                },
                "dataType": {
                    "enum": ["String", "Int16", "Int32", "Int64", "Single", "Double", "Decimal", "DateTime", "DateTimeOffset", "Time", "Boolean", "Guid", "Byte", "Binary", "Undefined"],
                    "default": "String"
                },
                "complexTypeName": {
                    "description":  "If present, this must be the fully qualified name of one of the 'complexTypes' defined within this document, and the 'dataType' property may be omitted",
                    "type": "string"
                },
                "isNullable": {
                    "description": "Whether a null can be assigned to this property.",
                    "type": "boolean",
                    "default": true
                },
                "defaultValue": {
                    "description": "The default value for this property if nothing is assigned to it.",
                    "type": "object"
                },
                "isPartOfKey": {
                    "description": "Whether this property is part of the key for this entity type",
                    "type": "boolean",
                    "default": false
                },
                "maxLength": {
                    "description": "Only applicable to 'String' properties. This is the maximum string length allowed.",
                    "type": "number"
                },
                "validators": {
                    "type": "array",
                    "items": { "$ref": "#/definitions/validator" },
                    "uniqueItems": true
                }
            }
        },
        "navigationProperty": {
            "properties": {
                "name": {
                    "type": "number"
                },
                "nameOnServer": {
                    "type": "string"
                },
                "entityTypeName": {
                    "type": "string"
                },
                "isScalar": {
                    "type": "boolean"
                },
                "associationName": {
                    "type": "string"
                },
                "foreignKeyNames": {
                    "type": "array",
                    "items": { "type": "string"}
                },
                "foreignKeyNamesOnServer": {
                    "type": "array",
                    "items": { "type": "string" }
                },
                "validators": {
                    "type": "array",
                    "items": { "$ref": "#/definitions/validator" },
                    "uniqueItems": true
                }
            }
        },
        "dataService": {
            "properties": {
                "serviceName": {
                    "type": "string"
                },
                "adapterName": {
                    "description": "On deserialization, this must match the name of some 'dataService adapter' already registered on the breeze client.",
                    "type": "string"
                },
                "hasServerMetadata": {
                    "type": "boolean",
                    "default": true
                },
                "jsonResultsAdapter": {
                    "description": "On deserialization, this must match the name of some jsonResultsAdapter registered on the breeze client.",
                    "type": "string"
                }
            },
            "required": ["serviceName"]
        },
        "validator": {
            "properties": {
                "validatorName": {
                    "description": "On deserialization, this must match the name of some validator already registered on the breeze client.",
                    "type": "string"
                }
            },
            "additionalProperties": true,
            "required": ["validatorName"]
        }
    
    },
    "additionalProperties": true
};